[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project]
name = 'scirpy'
dynamic = ["version"]
description = "Python library for single-cell adaptive immune receptor repertoire (AIRR) analysis"
readme = "README.md"
requires-python = '>= 3.9'
license = {file = "LICENSE"}
authors = [
    {name = "Gregor Sturm"},
    {name = "Tamas Szabo"},
]
maintainers = [
    {name = "Gregor Sturm", email="mail@gregor-sturm.de"}
]
urls.Documentation = "https://scirpy.readthedocs.io/"
urls.Source = "https://github.com/scverse/scirpy"
urls.Home-page = "https://github.com/scverse/scirpy"
dependencies = [
    'anndata>=0.9',
    'awkward>=2.1.0',
    'mudata>=0.2.3',
    'scanpy>=1.9.3',
    'pandas>=1.5,!=2.1.2',
    'numpy>=1.17.0',
    'scipy',
    # parasail 1.2.1 fails to be installd on MacOS
    'parasail != 1.2.1',
    'scikit-learn',
    'python-levenshtein',
    # 0.10.0 and 0.10.1 have the bug described in https://github.com/igraph/python-igraph/issues/570
    'igraph != 0.10.0,!=0.10.1',
    'networkx>=2.5',
    'squarify',
    'airr>=1.2',
    'tqdm>=4.63', # https://github.com/tqdm/tqdm/issues/1082
    'adjustText>=0.7',
    'numba>=0.41.0',
    'pooch>=1.7.0',
    'pycairo>=1.20; sys_platform == "win32"',
]

[project.optional-dependencies]
dev = [
    "pre-commit"
]
doc = [
    "docutils>=0.8,!=0.18.*,!=0.19.*",
    'sphinx>=4',
    "sphinx-book-theme>=1.0.0",
    "myst-nb",
    'sphinxcontrib-bibtex>=1.0.0',
    "sphinx-autodoc-typehints",
    # for tutorial
    'ipykernel',
    'ipython',
    "sphinx-copybutton",
    "sphinxext-opengraph",
    'leidenalg',
    'myst_nb',
    'jupytext',
    'pycairo',
    'jupyter_client',
    'sc-dandelion',
    'muon>=0.1.5',
    # for executing notebooks on CI
    'nbconvert',
    # I don't know why this would be needed, but it complains about zarr missing when building
    # the documentation. Probably related to importing some types from anndata.
    'zarr',
]
test = [
    'pytest',
    'pytest-cov',
    'black',
]
dandelion = [
    'sc-dandelion>=0.2.3',
]
diversity = [
    'scikit-bio>=0.5.7'
]
rpack = [
    'rectangle-packer',
]

[tool.hatch.version]
source = "vcs"

[tool.coverage.run]
source = ["scirpy"]
omit = [
    "**/test_*.py",
]

[tool.pytest.ini_options]
testpaths = "src/scirpy/tests"
xfail_strict = true
# addopts = [
#     "--import-mode=importlib",  # allow using test files with same name
# ]
markers = [
    "conda: marks a subset of tests to be ran on the Bioconda CI.",
    "extra: marks tests that require extra dependencies."
]
minversion = 6.0
norecursedirs = [ '.*', 'build', 'dist', '*.egg', 'data', '__pycache__']

[tool.black]
line-length = 120

[tool.ruff]
src = ["src"]
line-length = 120
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; black gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
    # missing docstring in public function
    "D103",
    # 1 blank line required between summary line and description
    "D205",
    # no explicit `stackelvel` keywork argument found
    "B028",
    # Use `r"""` if any backslashes in a docstring
    "D301"
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"docs/*" = ["I"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]
"src/scirpy/datasets/_processing_scripts/*" = ["B018", "E402"]

[tool.cruft]
skip = [
    "tests",
    "src/**/__init__.py",
    "src/**/basic.py",
    "docs/api.md",
    "docs/changelog.md",
    "docs/references.bib",
    "docs/references.md",
    "docs/notebooks/example.ipynb"
]
