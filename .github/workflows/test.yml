name: tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for setuptools-scm
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install macOS system dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install cairo pkg-config
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install pycairo for windows
        if: matrix.os == 'windows-latest'
        run: |
          $pkg = switch ("${{ matrix.python-version }}")
          {
              "3.6" {"https://download.lfd.uci.edu/pythonlibs/x2tqcw5k/pycairo-1.19.1-cp36-cp36m-win_amd64.whl"}
              "3.7" {"https://download.lfd.uci.edu/pythonlibs/x2tqcw5k/pycairo-1.19.1-cp37-cp37m-win_amd64.whl"}
              "3.8" {"https://download.lfd.uci.edu/pythonlibs/x2tqcw5k/pycairo-1.19.1-cp38-cp38-win_amd64.whl"}
          }
          pip install $pkg
      - name: Install dependencies
        run: |
          pip install .[test,rpack]
      - name: Check black formatting
        run: |
          black --check .
      - name: Test with pytest
        run: |
          pytest
