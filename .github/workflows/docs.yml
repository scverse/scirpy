name: docs

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [created]

jobs:
  docs:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.7]
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # required for setuptools-scm
      - name: Fetch all tags s.t. get_version can retrieve the correct version.
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install macOS system dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install cairo pkg-config pandoc autoconf automake libtool

      - name: Install Ubuntu system dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install pandoc

      - name: Install Windows system dependencies
        if: matrix.os == 'windows-latest'
        run: |
          $pandoc_url="https://github.com/jgm/pandoc/releases/download/2.9.2.1/pandoc-2.9.2.1-windows-x86_64.zip"
          Invoke-WebRequest -Uri $pandoc_url -OutFile "C:\pandoc.zip"
          Expand-Archive -LiteralPath "C:\pandoc.zip" -DestinationPath "C:\pandoc"
          Copy-Item -Path "C:\pandoc\pandoc-2.9.2.1\pandoc*.exe" -Destination "C:\Windows\system32"
          pandoc -v

      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install .[doc,test,rpack]
      - name: run sphinx
        run: |
          cd docs && make html SPHINXOPTS="-W --keep-going"

      - name: Get target folder for page deploy from github ref
        if: ( matrix.os == 'ubuntu-latest' ) &&  ( matrix.python-version == '3.7' )
        run: |
          # get rid of "refs/"
          tmp_target_dir=$(echo $github_ref | sed "s/^refs\///")
          echo $tmp_target_dir
          # get rid of "merge" at the end of ref for PRs
          if [[ $tmp_target_dir = pull/* ]]
          then
            tmp_target_dir=$(echo $tmp_target_dir | sed "s/\/merge$//")
          fi
          # when on master, we want to deploy to the root dir (-> ".")
          target_dir=$(echo $tmp_target_dir | sed "s/heads\/master/./")
          echo $target_dir
          echo "target_dir=$target_dir" >> $GITHUB_ENV
        env:
          github_ref: ${{ github.ref }}

      - name: Deploy to gh-pages
        if: ( matrix.os == 'ubuntu-latest' ) &&  ( matrix.python-version == '3.7' )
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: docs/_build/html # The folder the action should deploy.
          TARGET_FOLDER: ${{ env.target_dir }}
          CLEAN: true
          CLEAN_EXCLUDE: '["heads", "pull", "tags"]'
          SINGLE_COMMIT: true
          REPOSITORY_NAME: icbi-lab/scirpy
